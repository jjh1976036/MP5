server:
  port: 8080

spring:
  application:
    name: manuscripts
---

spring:
  profiles: default
  datasource:
    url: jdbc:h2:mem:testdb;
    driver-class-name: org.h2.Driver
    username: sa
    password: 1234

  h2:
    console:
      enabled: true
      path: /h2-console

  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: manuscripts
#<<< EDA / Topic Name
          destination: mp
#>>> EDA / Topic Name
          contentType: application/json
        event-out:
#<<< EDA / Topic Name
          destination: mp
#>>> EDA / Topic Name
          contentType: application/json
logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug


server:
  port: 8082

---

spring:
  profiles: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: manuscripts
          destination: mp
          contentType: application/json
        event-out:
          destination: mp
          contentType: application/json

---
# 추가 내용
#spring:
#  datasource:
#    url: jdbc:h2:mem:testdb;
#    driver-class-name: org.h2.Driver
#    username: sa
#    password:
#  jpa:
#    hibernate:
#      ddl-auto: update
#    show-sql: true
#
#  h2:
#    console:
#      enabled: true
#      path: /h2-console

# JWT 작성 필요

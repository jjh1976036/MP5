ersion: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: my-kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://my-kafka:29092,PLAINTEXT_HOST://my-kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - microservices-network

  frontend:
    image: upzs/aivle12-frontend:latest
    container_name: frontend
    ports:
      - 5173:80
    networks:
      - microservices-network

  authentication:
    depends_on: 
      - kafka
    image: upzs/aivle12-auth:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=my-kafka:9092
    env_file:
      - jwt.env
    ports:
      - 8080:8080
    networks:
      - microservices-network
      
  authors:
    depends_on: 
      - kafka
    image: upzs/aivle12-authors:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=my-kafka:9092
    env_file:
      - jwt.env
    ports:
      - 8081:8082
    networks:
      - microservices-network
# Currently not implemented services - commented out
  # manuscripts:
  #   depends_on: 
  #     - kafka
  #   image: adoptopenjdk/maven-openjdk11:latest
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #   command: mvn spring-boot:run
  #   ports:
  #     - 8082:8082
  #   working_dir: /usr/src
  #   volumes:
  #     - ./manuscripts:/usr/src
  #     - ./maven-repo:/root/.m2
      
  # aiservice:
  #   depends_on: 
  #     - kafka
  #   image: adoptopenjdk/maven-openjdk11:latest
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #   command: mvn spring-boot:run
  #   ports:
  #     - 8083:8083
  #   working_dir: /usr/src
  #   volumes:
  #     - ./aiservice:/usr/src
  #     - ./maven-repo:/root/.m2
      
  books:
   depends_on: 
     - kafka
   image: adoptopenjdk/maven-openjdk11:latest
   environment:
     - SPRING_PROFILES_ACTIVE=docker
   command: mvn spring-boot:run
   ports:
     - 8084:8084
   working_dir: /usr/src
   volumes:
     - ./books:/usr/src
     - ./maven-repo:/root/.m2
      
  mybook:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8085:8085
    working_dir: /usr/src
    volumes:
      - ./mybook:/usr/src
      - ./maven-repo:/root/.m2
      
  # payments:
  #   depends_on: 
  #     - kafka
  #   image: adoptopenjdk/maven-openjdk11:latest
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #   command: mvn spring-boot:run
  #   ports:
  #     - 8086:8086
  #   working_dir: /usr/src
  #   volumes:
  #     - ./payments:/usr/src
  #     - ./maven-repo:/root/.m2
      
  # points:
  #   depends_on: 
  #     - kafka
  #   image: adoptopenjdk/maven-openjdk11:latest
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #   command: mvn spring-boot:run
  #   ports:
  #     - 8087:8087
  #   working_dir: /usr/src
  #   volumes:
  #     - ./points:/usr/src
  #     - ./maven-repo:/root/.m2
      
  notifications:
    depends_on: 
      - kafka
    image: upzs/aivle12-notifications:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=my-kafka:9092
    env_file:
      - jwt.env
    ports:
      - 8088:8080
    networks:
      - microservices-network



  # Optional: Kafka UI for monitoring
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - 9090:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: my-kafka:9092
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge 

